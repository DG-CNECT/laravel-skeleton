{"version":3,"sources":["webpack://./src/styles/app.scss","webpack://./src/styles/markdown.scss","webpack://./src/components/SplashPage/LogoLink.scss","webpack://./implementations/vanilla/layout/grid/grid.scss","webpack://./implementations/vanilla/layout/grid/mixins/_grid.scss","webpack://./implementations/vanilla/layout/grid/mixins/_breakpoints.scss","webpack://./src/components/Grid/grid.scss","webpack://./implementations/vanilla/layout/grid/mixins/_grid-framework.scss","webpack://./src/styles/utilities.scss","webpack://./src/components/SplashPage/SplashPage.scss","webpack://./src/components/Example/Example.scss","webpack://./src/components/Navigation/SingleLink.scss","webpack://./src/components/Navigation/LinkGroup.scss","webpack://./src/components/Navigation/LinkSection.scss","webpack://./src/components/Navigation/LinkList.scss","webpack://./src/components/Navigation/Navigation.scss","webpack://./src/components/MainContainer/MainContainer.scss"],"names":[],"mappings":"AAGE,KACE,qBAAA,CACA,QAAA,CACA,wBAAA,CAOF,oEAUE,aAAA,CAGF,WACE,YAAA,CAGF,gBACE,6BAAA,CAAA,qBAAA,CACA,qBAAA,CAGF,uBACE,WAAA,CAGF,sCACE,WAAA,CAGF,qCACE,YAAA,CAGF,2BACE,cAAA,CACA,aAAA,CACA,WAAA,CAGF,kBACE,eAAA,CAGF,UAEE,qBAEA,CAGF,qBANE,6BAAA,CAAA,qBAAA,CAEA,qBAAA,CACA,aAMA,CAGF,sBACE,eAAA,CAGF,MACE,gBAAA,CACA,iBAAA,CCzEJ,4BACE,aAAA,CACA,oDAAA,CACA,eAAA,CACA,QAAA,CACA,SAAA,CAEA,oCAPF,4BAQI,mDAAA,CACA,eAAA,CAAA,CAIJ,6BACE,+BAAA,CACA,aAAA,CACA,sDAAA,CACA,eAAA,CACA,QAAA,CACA,gBAAA,CAEA,oCARF,6BASI,oDAAA,CACA,eAAA,CAAA,CAIJ,6BACE,+BAAA,CACA,aAAA,CACA,sDAAA,CACA,eAAA,CACA,QAAA,CACA,gBAAA,CAEA,oCARF,6BASI,sDAAA,CACA,eAAA,CAAA,CAIJ,4BACE,aAAA,CACA,uDAAA,CACA,QAAA,CACA,SAAA,CAGF,6BACE,aAAA,CACA,mDAAA,CACA,QAAA,CACA,cAAA,CACA,SAAA,CAGF,6BACE,aAAA,CACA,4BAAA,CACA,yBAAA,CAEA,sEAEE,UAAA,CAGF,mCACE,yBAAA,CACA,kBAAA,CAIJ,6BACE,aAAA,CACA,mDAAA,CACA,QAAA,CACA,SAAA,CAGF,4BACE,cAAA,CAGF,4BACE,cAAA,CACA,QAAA,CACA,SAAA,CAIF,4BACE,aAAA,CAWF,yDACE,6BAAA,CAAA,qBAAA,CACA,aAAA,CACA,mDAAA,CACA,cAAA,CACA,QAAA,CAGF,4BACE,wBAAA,CACA,cAAA,CACA,QAAA,CACA,UAAA,CAGF,yDACE,+BAAA,CAGF,yDACE,+BAAA,CAGF,4BACE,4BAAA,CACA,mDAAA,CACA,eAAA,CACA,eAAA,CAGF,4BACE,mDAAA,CAGF,wDAEE,aAAA,CACA,kBAAA,CACA,cAAA,CACA,kBAAA,CACA,QAAA,CACA,cAAA,CAGF,4BAGE,wBAAA,CACA,QAAA,CACA,SAAA,CAOF,6DACE,iBAAA,CAEA,oCAHF,+BAII,eAAA,CAAA,CAIJ,+BACE,eAAA,CAGF,8BACE,eAAA,CAEA,oCAHF,8BAII,iBAAA,CAAA,CAIJ,uLAME,iBAAA,CAYF,4qBAME,eAAA,CAGF,gBACE,wBAAA,CACA,wBAAA,CACA,iBAAA,CAEA,sBACE,y1JAwBF,CAAA,qBAAA,CAAA,UAAA,CAAA,aAAA,CAAA,WAAA,CAAA,iBAAA,wBAAA,CAAA,8BAAA,wDAAA,CAAA,cAAA,CAAA,4DAAA,eAAA,CC3OF,4BACE,qBAAA,CAAA,kBAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CAAA,qBAAA,CACA,mBAAA,CAAA,YAAA,CACA,mBAAA,CAAA,WAAA,CACA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAGF,oEAEE,wBAAA,CACA,YAAA,CACA,wBAAA,CAGF,gCACE,eAAA,CACA,eAAA,CACA,UAAA,CAGF,gCACE,eAAA,CACA,eAAA,CACA,UAAA,CCtBA,6BCEA,6BAAA,CAAA,qBAAA,CACA,gBAAA,CACA,iBAAA,CACA,iBAAA,CACA,UAAA,CAMI,iBAAA,CACA,kBAAA,CCuDA,wBFpEJ,6BCYI,iBAAA,CACA,kBAAA,CAAA,CCuDA,wBFpEJ,6BCYI,iBAAA,CACA,kBAAA,CAAA,CCuDA,yBFpEJ,6BCYI,iBAAA,CACA,kBAAA,CAAA,CCuDA,yBFpEJ,6BCYI,iBAAA,CACA,kBAAA,CAAA,CCuDA,wBFpEJ,6BCyBI,cAAA,CACA,WE1BQ,CAAA,CDoER,wBFpEJ,6BCyBI,cAAA,CACA,WE1BQ,CAAA,CDoER,yBFpEJ,6BCyBI,cAAA,CACA,WE1BQ,CAAA,CDoER,yBFpEJ,6BCyBI,cAAA,CACA,YE1BQ,CAAA,CHOZ,8BCoCA,6BAAA,CAAA,qBAAA,CACA,mBAAA,CAAA,YAAA,CACA,kBAAA,CAAA,cAAA,CAMI,iBAAA,CACA,kBAAA,CCgBA,wBF7DJ,8BC4CI,iBAAA,CACA,kBAAA,CAAA,CCgBA,wBF7DJ,8BC4CI,iBAAA,CACA,kBAAA,CAAA,CCgBA,yBF7DJ,8BC4CI,iBAAA,CACA,kBAAA,CAAA,CCgBA,yBF7DJ,8BC4CI,iBAAA,CACA,kBAAA,CAAA,CDvCJ,4BACE,aAAA,CACA,cAAA,CAEA,sGAEE,cAAA,CACA,eAAA,CIVJ,mrDH0BI,iBAAA,CACA,kBAAA,CGxBF,6BAAA,CAAA,qBAAA,CACA,cAAA,CACA,iBAAA,CACA,UAAA,CFoDE,wBE1DJ,mrDH0BI,iBAAA,CACA,kBAAA,CAAA,CC+BA,wBE1DJ,mrDH0BI,iBAAA,CACA,kBAAA,CAAA,CC+BA,yBE1DJ,mrDH0BI,iBAAA,CACA,kBAAA,CAAA,CC+BA,yBE1DJ,mrDH0BI,iBAAA,CACA,kBAAA,CAAA,CGLE,4BH8CN,0BAAA,CAAA,sBAAA,CAMA,uBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,8BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,+BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,iBAAA,CAAA,aAAA,CAMA,cAAA,CG7CQ,4BHyDR,UAAA,CGzDQ,6BHyDR,mBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,8BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,UAAA,CGzDQ,4BHqDR,SAAA,CGrDQ,gCHqDR,kBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,8BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,SAAA,CG3CQ,6BHuCR,yBAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CCpBI,wBEpCE,4BH8CN,0BAAA,CAAA,sBAAA,CAMA,uBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,8BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,iBAAA,CAAA,aAAA,CAMA,cAAA,CG7CQ,6BHyDR,UAAA,CGzDQ,6BHyDR,mBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,8BHyDR,oBAAA,CGzDQ,4BHyDR,UAAA,CGzDQ,4BHqDR,SAAA,CGrDQ,8BHqDR,kBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,QAAA,CGrDQ,8BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,6BHqDR,SAAA,CG3CQ,8BHuCR,aAAA,CGvCQ,4BHuCR,yBAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CAAA,CCpBI,wBEpCE,6BH8CN,0BAAA,CAAA,sBAAA,CAMA,uBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,8BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,iBAAA,CAAA,aAAA,CAMA,cAAA,CG7CQ,6BHyDR,UAAA,CGzDQ,6BHyDR,mBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,8BHyDR,oBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,UAAA,CGzDQ,4BHqDR,SAAA,CGrDQ,4BHqDR,kBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,SAAA,CG3CQ,6BHuCR,aAAA,CGvCQ,4BHuCR,yBAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,6BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CAAA,CCpBI,yBEpCE,6BH8CN,0BAAA,CAAA,sBAAA,CAMA,uBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,8BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,iBAAA,CAAA,aAAA,CAMA,cAAA,CG7CQ,4BHyDR,UAAA,CGzDQ,6BHyDR,mBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,UAAA,CGzDQ,4BHqDR,SAAA,CGrDQ,4BHqDR,kBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,4BHqDR,QAAA,CGrDQ,8BHqDR,mBAAA,CGrDQ,4BHqDR,mBAAA,CGrDQ,6BHqDR,SAAA,CG3CQ,4BHuCR,aAAA,CGvCQ,6BHuCR,yBAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,6BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,eAAA,CGvCQ,4BHuCR,0BAAA,CGvCQ,4BHuCR,0BAAA,CAAA,CCpBI,yBEpCE,4BH8CN,0BAAA,CAAA,sBAAA,CAMA,uBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,8BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,6BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,8BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,gBAAA,CAAA,YAAA,CAMA,aAAA,CGpDM,8BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,2BAAA,CAAA,uBAAA,CAMA,wBAAA,CGpDM,4BH8CN,iBAAA,CAAA,aAAA,CAMA,cAAA,CG7CQ,4BHyDR,UAAA,CGzDQ,4BHyDR,mBAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,6BHyDR,SAAA,CGzDQ,6BHyDR,oBAAA,CGzDQ,4BHyDR,oBAAA,CGzDQ,4BHyDR,UAAA,CGzDQ,4BHqDR,SAAA,CGrDQ,4BHqDR,kBAAA,CGrDQ,6BHqDR,mBAAA,CGrDQ,8BHqDR,QAAA,CGrDQ,6BHqDR,mB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","file":"main.a17c7951.chunk.css","sourcesContent":["/* stylelint-disable no-descending-specificity */\n\n:global {\n  body {\n    background-color: #fff;\n    margin: 0;\n    overflow-wrap: break-word;\n  }\n\n  /**\n   * Add the correct display in IE 9-.\n   * Was removed from normalize.css...\n   */\n  article,\n  aside,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n\n  main:focus {\n    outline: none;\n  }\n\n  .demo-container {\n    box-sizing: border-box;\n    border: 2px solid #444;\n  }\n\n  .demo-container--small {\n    width: 14rem;\n  }\n\n  .demo-container--default-height-small {\n    height: 6rem;\n  }\n\n  .demo-container--default-height-long {\n    height: 12rem;\n  }\n\n  .demo-container--resizable {\n    max-width: 100%;\n    overflow: auto;\n    resize: both;\n  }\n\n  * + .demo-container {\n    margin-top: 1rem;\n  }\n\n  .demo-box {\n    box-sizing: border-box;\n    border: 1px solid #777;\n    background-color: #eee;\n    padding: 0.5rem;\n  }\n\n  .demo-item {\n    box-sizing: border-box;\n    background-color: #eee;\n    padding: 0.5rem;\n  }\n\n  .demo-item + .demo-item {\n    margin-top: 1rem;\n  }\n\n  #root {\n    min-height: 100vh;\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.h1 {\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font, '3xl');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    font: map.get(theme.$font, '4xl');\n    font-weight: map.get(theme.$font-weight, 'bold');\n  }\n}\n\n.h2 {\n  border-bottom: 2px solid map.get(theme.$color, 'grey-75');\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font, '2xl');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: 0 0 map.get(theme.$spacing, 'm') 0;\n\n  @media screen and (min-width: 768px) {\n    font: map.get(theme.$font, '3xl');\n    font-weight: map.get(theme.$font-weight, 'bold');\n  }\n}\n\n.h3 {\n  border-bottom: 2px solid map.get(theme.$color, 'grey-15');\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font, 'xl');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: 0 0 map.get(theme.$spacing, 'm') 0;\n\n  @media screen and (min-width: 768px) {\n    font: map.get(theme.$font, '2xl');\n    font-weight: map.get(theme.$font-weight, 'bold');\n  }\n}\n\n.h4 {\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font, 'l');\n  margin: 0;\n  padding: 0;\n}\n\n.p {\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font-prolonged, 'm');\n  margin: 0;\n  max-width: 64ch;\n  padding: 0;\n}\n\n.a {\n  color: map.get(theme.$color, 'primary');\n  font-family: #{map.get(theme.$font-family, 'default')};\n  text-decoration: underline;\n\n  &:hover,\n  &:focus {\n    color: map.get(theme.$color, 'black-100');\n  }\n\n  &:focus {\n    outline: 3px solid map.get(theme.$color, 'secondary');\n    outline-offset: 2px;\n  }\n}\n\n.details {\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font-prolonged, 'm');\n  margin: 0;\n  padding: 0;\n}\n\n.summary {\n  cursor: pointer;\n}\n\n.img {\n  max-width: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n/* link around an image */\n.imgA {\n  display: block;\n}\n\n.ul {\n  box-sizing: border-box;\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font-prolonged, 'm');\n  max-width: 64ch;\n  margin: 0;\n}\n\n.ol {\n  box-sizing: border-box;\n  color: map.get(theme.$color, 'grey-100');\n  font: map.get(theme.$font-prolonged, 'm');\n  max-width: 64ch;\n  margin: 0;\n}\n\n.table {\n  border-collapse: collapse;\n  border-width: 0;\n  margin: 0;\n  width: 100%;\n}\n\n.thead .tr {\n  border-bottom: 2px solid map.get(theme.$color, 'grey-50');\n}\n\n.tbody .tr {\n  border-bottom: 1px solid map.get(theme.$color, 'grey-50');\n}\n\n.th {\n  background-color: transparent;\n  font: map.get(theme.$font-prolonged, 'm');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  text-align: left;\n}\n\n.td {\n  font: map.get(theme.$font-prolonged, 'm');\n}\n\n.td,\n.th {\n  color: map.get(theme.$color, 'grey-100');\n  display: table-cell;\n  padding: map.get(theme.$spacing, 's');\n  vertical-align: top;\n  margin: 0;\n  max-width: 64ch;\n}\n\n.hr {\n  border-color: map.get(theme.$color, 'grey-75');\n  border-width: 1px;\n  border-style: solid;\n  margin: 0;\n  padding: 0;\n}\n\n* + .h1 {\n  margin-top: map.get(theme.$spacing, '2xl');\n}\n\n* + .h2 {\n  margin-top: map.get(theme.$spacing, '2xl');\n\n  @media screen and (min-width: 768px) {\n    margin-top: map.get(theme.$spacing, '3xl');\n  }\n}\n\n* + .h3 {\n  margin-top: map.get(theme.$spacing, 'xl');\n}\n\n* + .h4 {\n  margin-top: map.get(theme.$spacing, 'm');\n\n  @media screen and (min-width: 768px) {\n    margin-top: map.get(theme.$spacing, 'l');\n  }\n}\n\n* + .p,\n* + .details,\n* + .img,\n* + .ul,\n* + .ol,\n* + .table {\n  margin-top: map.get(theme.$spacing, 's');\n}\n\n.h1 + .p,\n.h1 + .details,\n.h1 + .img,\n.h1 + .ul,\n.h1 + .ol,\n.h1 + .table {\n  margin-top: map.get(theme.$spacing, 'm');\n}\n\n.h2 + .p,\n.h2 + .details,\n.h2 + .img,\n.h2 + .ul,\n.h2 + .ol,\n.h2 + .table {\n  margin-top: map.get(theme.$spacing, 'm');\n}\n\nh2 + blockquote + p {\n  border: 1px solid map.get(theme.$color, 'grey-15');\n  max-width: 100% !important;\n  text-align: center;\n\n  &::after {\n    background: url('../../public/cms-images/anatomy_legend.png') 2rem center\n        no-repeat,\n      map.get(theme.$color, 'grey-5');\n    background-size: 15rem;\n    content: '';\n    display: block;\n    height: 4rem;\n  }\n}\n\nimg[alt='anatomy'] {\n  border: 1px solid map.get(theme.$color, 'grey-15');\n}\n\ndiv:first-child p:first-child {\n  font: map.get(theme.$font-prolonged, 'l');\n  max-width: 49ch;\n}\n\n* + .hr {\n  margin-top: map.get(theme.$spacing, 'm');\n}\n\n* + .imgA {\n  margin-top: map.get(theme.$spacing, 'm');\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.logo-link {\n  align-items: center;\n  background-color: map.get(theme.$color, 'grey-5');\n  border: 1px solid map.get(theme.$color, 'grey-10');\n  box-sizing: border-box;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  padding: calc(#{map.get(theme.$spacing, 'xl')} - 1px);\n}\n\n.logo-link:hover,\n.logo-link:focus {\n  border: 3px solid map.get(theme.$color, 'yellow-100');\n  outline: none;\n  padding: calc(#{map.get(theme.$spacing, 'xl')} - 3px);\n}\n\n.logo-link--ec img {\n  max-height: 5rem;\n  max-width: 20rem;\n  width: 100%;\n}\n\n.logo-link--eu img {\n  max-height: 3rem;\n  max-width: 20rem;\n  width: 100%;\n}\n","// Grid mixins\n\n@use 'mixins/grid-framework';\n@use 'mixins/grid';\n\n@mixin ecl-grid() {\n  // Container widths\n  // Set the container width, and override it for fixed navbars in media queries.\n  .ecl-container {\n    @include grid.ecl-make-container;\n    @include grid.ecl-make-container-max-widths;\n  }\n\n  // Row\n  // Rows contain and clear the floats of your columns.\n  .ecl-row {\n    @include grid.ecl-make-row;\n  }\n\n  // Remove the negative margin from default .row, then the horizontal padding\n  // from all immediate children columns (to prevent runaway style inheritance).\n  .ecl-no-gutters {\n    margin-left: 0;\n    margin-right: 0;\n\n    > .ecl-col,\n    > [class*='ecl-col-'] {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  }\n\n  // Columns\n  // Common styles for small and large grid columns\n  @include grid-framework.make-grid-columns; // stylelint-disable-line\n}\n\n// Use mixin\n@include ecl-grid;\n","@use 'sass:map';\n@use 'sass:math';\n@use 'breakpoints';\n@use '@ecl/theme-dev/theme';\n\n/// Grid system\n\n// Generate semantic grid columns with these mixins.\n\n@mixin ecl-make-container($gutters: theme.$grid-gutter-width) {\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  width: 100%;\n\n  @each $breakpoint in map.keys($gutters) {\n    @include breakpoints.up($breakpoint) {\n      $gutter: map.get($gutters, $breakpoint);\n\n      padding-left: ($gutter * 0.5);\n      padding-right: ($gutter * 0.5);\n    }\n  }\n}\n\n// For each breakpoint, define the maximum width of the container in a media query\n@mixin ecl-make-container-max-widths(\n  $max-widths: theme.$container,\n  $breakpoints: theme.$breakpoint\n) {\n  @each $breakpoint, $container-max-width in $max-widths {\n    @include breakpoints.up($breakpoint, $breakpoints) {\n      max-width: 100%;\n      width: $container-max-width;\n    }\n  }\n}\n\n@mixin make-gutters($gutters: theme.$grid-gutter-width) {\n  @each $breakpoint in map.keys($gutters) {\n    @include breakpoints.up($breakpoint) {\n      $gutter: map.get($gutters, $breakpoint);\n\n      padding-left: ($gutter * 0.5);\n      padding-right: ($gutter * 0.5);\n    }\n  }\n}\n\n@mixin ecl-make-row($gutters: theme.$grid-gutter-width) {\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n\n  @each $breakpoint in map.keys($gutters) {\n    @include breakpoints.up($breakpoint) {\n      $gutter: map.get($gutters, $breakpoint);\n\n      margin-left: math.div($gutter, -2);\n      margin-right: math.div($gutter, -2);\n    }\n  }\n}\n\n@mixin make-col-ready($gutters: theme.$grid-gutter-width) {\n  box-sizing: border-box;\n  min-height: 1px; // Prevent collapsing\n  position: relative;\n\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we use `flex` values\n  // later on to override this initial width.\n  width: 100%;\n\n  @each $breakpoint in map.keys($gutters) {\n    @include breakpoints.up($breakpoint) {\n      $gutter: map.get($gutters, $breakpoint);\n\n      padding-left: ($gutter * 0.5);\n      padding-right: ($gutter * 0.5);\n    }\n  }\n}\n\n@mixin make-col($size, $columns: map.get($grid, 'columns')) {\n  flex: 0 0 math.percentage(math.div($size, $columns));\n\n  // width: percentage($size / $columns);\n  // Add a `max-width` to make sure content within each column does not blow out\n  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\n  // do not appear to require this.\n  max-width: math.percentage(math.div($size, $columns));\n}\n\n@mixin make-col-offset($size, $columns: map.get($grid, 'columns')) {\n  margin-left: math.percentage(math.div($size, $columns));\n}\n\n@mixin make-col-push($size, $columns: map.get($grid, 'columns')) {\n  left: if($size > 0, math.percentage(math.div($size, $columns)), auto);\n}\n\n@mixin make-col-pull($size, $columns: map.get($grid, 'columns')) {\n  right: if($size > 0, math.percentage(math.div($size, $columns)), auto);\n}\n\n@mixin make-col-modifier($type, $size, $columns) {\n  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)\n  @if $type == push {\n    @include make-col-push($size, $columns);\n  } @else if $type == pull {\n    @include make-col-pull($size, $columns);\n  } @else if $type == offset {\n    @include make-col-offset($size, $columns);\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n/* Breakpoint viewport sizes and media queries.\n\nBreakpoints are defined as a map of (name: minimum width), order from small to large:\n   (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n\n The map defined in the `$breakpoint` global variable is used as the `$breakpoints` argument by default.\n\n Name of the next breakpoint, or null for the last breakpoint.\n\n  >> breakpoint-next(sm)\n   md\n  >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n   md\n  >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n   md\n*/\n\n@function next(\n  $name,\n  $breakpoints: theme.$breakpoint,\n  $breakpoint-names: map.keys($breakpoints)\n) {\n  $n: list.index($breakpoint-names, $name);\n\n  @return if(\n    $n < list.length($breakpoint-names),\n    list.nth($breakpoint-names, $n + 1),\n    null\n  );\n}\n\n/* Minimum breakpoint width. Null for the smallest (first) breakpoint.\n    >> ecl-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n    576px\n*/\n@function ecl-min($name, $breakpoints: theme.$breakpoint) {\n  $min: map.get($breakpoints, $name);\n\n  @return if($min != 0, $min, null);\n}\n\n/* Maximum breakpoint width. Null for the largest (last) breakpoint.\n   The maximum value is calculated as the minimum of the next one less 0.1.\n\n   >> ecl-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n   767px\n*/\n@function ecl-max($name, $breakpoints: theme.$breakpoint) {\n  $next: next($name, $breakpoints);\n\n  @return if($next, ecl-min($next, $breakpoints) - 1px, null);\n}\n\n/* Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n    Useful for making responsive utilities.\n\n    >> infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n    \"\"  (Returns a blank string)\n    >> infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n    \"-sm\"\n*/\n@function infix($name, $breakpoints: theme.$breakpoint) {\n  @return if(ecl-min($name, $breakpoints) == null, '', '-#{$name}');\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin up($name, $breakpoints: theme.$breakpoint) {\n  @if map_has_key($breakpoints, $name) {\n    $min: ecl-min($name, $breakpoints);\n\n    @if $min {\n      @media (min-width: $min) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin down($name, $breakpoints: theme.$breakpoint) {\n  @if map_has_key($breakpoints, $name) {\n    $max: ecl-max($name, $breakpoints);\n\n    @if $max {\n      @media (max-width: $max) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin between($lower, $upper, $breakpoints: theme.$breakpoint) {\n  @include up($lower, $breakpoints) {\n    @include down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint\"s minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin only($name, $breakpoints: theme.$breakpoint) {\n  @include between($name, $name, $breakpoints) {\n    @content;\n  }\n}\n","@use '@ecl/theme-dev/maps/layout' with (\n  $breakpoint: (\n    'xs': 0,\n    's': 480px,\n    'm': 768px,\n    'l': 1140px,\n    'xl': 1500px,\n  ),\n  $container: (\n    's': 480px,\n    'm': 768px,\n    'l': 768px,\n    'xl': 1140px,\n  )\n);\n@use '@ecl/vanilla-layout-grid/grid';\n","@use 'sass:map';\n@use 'breakpoints';\n@use '@ecl/theme-dev/theme';\n@use 'grid';\n\n// Framework grid generation\n\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n/* stylelint-disable max-nesting-depth */\n\n@mixin make-grid-columns(\n  $columns: map.get(theme.$grid, 'columns'),\n  $gutters: theme.$grid-gutter-width,\n  $breakpoints: theme.$breakpoint\n) {\n  // Common properties for all breakpoints\n  %grid-column {\n    @include grid.make-gutters($gutters);\n\n    box-sizing: border-box;\n    min-height: 1px; // Prevent columns from collapsing when empty\n    position: relative;\n    width: 100%;\n  }\n\n  @each $breakpoint in map.keys($breakpoints) {\n    $infix: breakpoints.infix($breakpoint, $breakpoints);\n\n    // Allow columns to stretch full width below their breakpoints\n    @for $i from 1 through $columns {\n      .ecl-col#{$infix}-#{$i} {\n        @extend %grid-column;\n      }\n    }\n\n    /* stylelint-disable-next-line order/order */\n    @include breakpoints.up($breakpoint, $breakpoints) {\n      @for $i from 1 through $columns {\n        .ecl-col#{$infix}-#{$i} {\n          @include grid.make-col($i, $columns);\n        }\n      }\n\n      @each $modifier in (pull, push) {\n        @for $i from 0 through $columns {\n          .ecl-#{$modifier}#{$infix}-#{$i} {\n            @include grid.make-col-modifier($modifier, $i, $columns);\n          }\n        }\n      }\n\n      // `$columns - 1` because offsetting by the width of an entire row isn't possible\n      @for $i from 0 through ($columns - 1) {\n        @if not($infix == '' and $i == 0) {\n          // Avoid emitting useless .offset-xs-0\n          .ecl-offset#{$infix}-#{$i} {\n            @include grid.make-col-modifier(offset, $i, $columns);\n          }\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.pv-m {\n  padding-bottom: map.get(theme.$spacing, 'm') !important;\n  padding-top: map.get(theme.$spacing, 'm') !important;\n}\n\n.pv-l {\n  padding-bottom: map.get(theme.$spacing, 'l') !important;\n  padding-top: map.get(theme.$spacing, 'l') !important;\n}\n\n.pv-xl {\n  padding-bottom: map.get(theme.$spacing, 'xl') !important;\n  padding-top: map.get(theme.$spacing, 'xl') !important;\n}\n\n.pv-2xl {\n  padding-bottom: map.get(theme.$spacing, '2xl') !important;\n  padding-top: map.get(theme.$spacing, '2xl') !important;\n}\n\n.pv-3xl {\n  padding-bottom: map.get(theme.$spacing, '3xl') !important;\n  padding-top: map.get(theme.$spacing, '3xl') !important;\n}\n\n@media screen and (min-width: map.get(theme.$breakpoint, 'md')) {\n  .pv-md-3xl {\n    padding-bottom: map.get(theme.$spacing, '3xl') !important;\n    padding-top: map.get(theme.$spacing, '3xl') !important;\n  }\n}\n\n.pv-4xl {\n  padding-bottom: map.get(theme.$spacing, '4xl') !important;\n  padding-top: map.get(theme.$spacing, '4xl') !important;\n}\n\n.mt-m {\n  margin-top: map.get(theme.$spacing, 'm') !important;\n}\n\n.mt-l {\n  margin-top: map.get(theme.$spacing, 'l') !important;\n}\n\n.mt-xl {\n  margin-top: map.get(theme.$spacing, 'xl') !important;\n}\n\n.d-flex {\n  display: flex !important;\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.splash-page {\n  background-color: map.get(theme.$color, 'grey-5');\n  box-sizing: border-box;\n  min-height: 100vh;\n  padding: map.get(theme.$spacing, '4xl') 0 map.get(theme.$spacing, 'xl');\n}\n\n.splash-page-actions-row {\n  margin-top: map.get(theme.$spacing, 'xl');\n\n  @media screen and (min-width: 768px) {\n    margin-top: map.get(theme.$spacing, '4xl');\n  }\n}\n\n.splash-page-actions-row .splash-page-actions-col + .splash-page-actions-col {\n  margin-top: map.get(theme.$spacing, 'm');\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n$_outline-width: 3px;\n\n.button {\n  background: none;\n  border-width: 0;\n  box-sizing: border-box;\n  color: map.get(theme.$color, 'primary');\n  font: map.get(theme.$font, 'm');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');\n  text-decoration: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    text-decoration: underline;\n  }\n\n  &:focus {\n    outline: $_outline-width solid map.get(theme.$color, 'secondary');\n    outline-offset: -($_outline-width);\n  }\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.page-list-item {\n  align-items: center;\n  background-color: map.get(theme.$color, 'grey-5');\n  border-width: 0;\n  color: map.get(theme.$color, 'text');\n  display: flex;\n  font: map.get(theme.$font, 'm');\n  margin: 0;\n  text-decoration: none;\n\n  &.level-0 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');\n  }\n\n  &.level-1 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xl');\n  }\n\n  &.level-2 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, '3xl');\n  }\n\n  &.level-3 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, '4xl');\n  }\n}\n\n.page-list-item:hover,\n.page-list-item:focus {\n  background-color: map.get(theme.$color, 'grey-10');\n  outline: none;\n}\n\n.page-list-item:active {\n  background-color: map.get(theme.$color, 'grey-25');\n}\n\n.page-list-item--active {\n  border-left: 4px solid map.get(theme.$color, 'yellow-100');\n\n  &.level-0 {\n    padding-left: calc(#{map.get(theme.$spacing, 'm')} - 4px);\n  }\n\n  &.level-1 {\n    padding-left: calc(#{map.get(theme.$spacing, 'xl')} - 4px);\n  }\n\n  &.level-2 {\n    padding-left: calc(#{map.get(theme.$spacing, '3xl')} - 4px);\n  }\n\n  &.level-3 {\n    padding-left: calc(#{map.get(theme.$spacing, '4xl')} - 4px);\n  }\n}\n\n.page-status {\n  background-color: #000;\n  border-radius: 50%;\n  box-sizing: border-box;\n  display: block;\n  flex-shrink: 0;\n  height: 0.5rem;\n  margin: 0 0.5rem;\n  width: 0.5rem;\n}\n\n.status-ready {\n  background-color: #467a39;\n}\n\n.status-planned {\n  background-color: #006fb4;\n}\n\n.status-wip {\n  background-color: #f29527;\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.group {\n  color: map.get(theme.$color, 'grey-75');\n  display: block;\n  font: map.get(theme.$font, 'm');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm')\n    map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xl');\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n.group-list-parent {\n  box-sizing: border-box;\n  display: flex;\n  align-items: stretch;\n}\n\n.group-list-item {\n  background-color: map.get(theme.$color, 'grey-5');\n  border-width: 0;\n  box-sizing: border-box;\n  color: map.get(theme.$color, 'text');\n  display: block;\n  font: map.get(theme.$font, 'm');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  margin: 0;\n  padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xs')\n    map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');\n  text-align: left;\n  text-decoration: none;\n  text-transform: capitalize;\n  width: 100%;\n\n  &.level-0 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xs')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, 'm');\n  }\n\n  &.level-1 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xs')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xl');\n  }\n\n  &.level-2 {\n    padding: map.get(theme.$spacing, 's') map.get(theme.$spacing, 'xs')\n      map.get(theme.$spacing, 's') map.get(theme.$spacing, '3xl');\n  }\n}\n\n.group-list-item:hover,\n.group-list-item:focus {\n  background-color: map.get(theme.$color, 'grey-10');\n  outline: none;\n}\n\n.group-list-item:active {\n  background-color: map.get(theme.$color, 'grey-25');\n}\n\n.button {\n  appearance: none;\n  background-color: transparent;\n  border-width: 0;\n  padding: map.get(theme.$spacing, 's');\n}\n\n.button:hover,\n.button:focus {\n  background-color: map.get(theme.$color, 'grey-10');\n  outline: none;\n}\n\n.button:active {\n  background-color: map.get(theme.$color, 'grey-25');\n}\n\n.icon {\n  display: block;\n  height: 0.875rem;\n  width: 0.875rem;\n  transition: transform 200ms ease-in-out;\n}\n\n.icon-rotate-90 {\n  transform: rotate(90deg);\n}\n\n.icon-rotate-180 {\n  transform: rotate(180deg);\n}\n\n:global(.no-js) .icon {\n  transform: rotate(180deg);\n}\n",".list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  &[aria-hidden='true'] {\n    display: none;\n\n    :global(.no-js) & {\n      display: block;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@ecl/theme-dev/theme';\n\n$_nav-width: 15rem;\n$_nav-logo-height: 2rem;\n$_nav-logo-max-width: 10rem;\n$_nav-toggle-size: 2.5rem;\n$_nav-toggle-bar-width: 1.5rem; // 24px\n$_nav-toggle-bar-height: 0.125rem; // 2px\n$_nav-toggle-bar-spacing-between: 0.375rem;\n\n.nav {\n  background-color: map.get(theme.$color, 'grey-5');\n  box-shadow: 0 2px 4px rgb(0 0 0 / 0.4);\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n  position: fixed;\n  top: 0;\n  transition: transform 300ms ease;\n  width: $_nav-width;\n  z-index: 1000;\n\n  :global(.no-js) & {\n    position: static;\n    width: 100%;\n\n    @media screen and (min-width: 1140px) {\n      position: fixed;\n      width: $_nav-width;\n    }\n  }\n}\n\n.nav--closed {\n  overflow: visible;\n  transform: translate(-$_nav-width, 0);\n\n  :global(.no-js) & {\n    transform: translate(0, 0);\n  }\n}\n\n.header {\n  background-color: map.get(theme.$color, 'white-100');\n  border-bottom: 2px solid map.get(theme.$color, 'grey-25');\n  padding: map.get(theme.$spacing, 'm');\n}\n\n.version {\n  background-color: map.get(theme.$color, 'grey-5');\n  border-radius: 1rem;\n  color: map.get(theme.$color, 'text');\n  display: inline-block;\n  font: map.get(theme.$font, 's');\n  padding: map.get(theme.$spacing, 'xs') map.get(theme.$spacing, 's');\n}\n\n.logo {\n  background-image: url('~@ecl/preset-ec/dist/images/logo/positive/logo-ec--en.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  display: block;\n  height: $_nav-logo-height;\n  margin-top: map.get(theme.$spacing, 'l');\n  max-width: $_nav-logo-max-width;\n}\n\n.logo--eu {\n  background-image: url('~@ecl/preset-eu/dist/images/logo/standard-version/positive/logo-eu--en.svg');\n}\n\n.logo-sr {\n  display: none;\n}\n\n.title {\n  color: map.get(theme.$color, 'text');\n  font: map.get(theme.$font, 'm');\n  margin-top: map.get(theme.$spacing, 's');\n}\n\n.system-list {\n  display: flex;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n.system-list-item {\n  flex-grow: 1;\n  text-align: center;\n}\n\n.system-list-item-link {\n  color: map.get(theme.$color, 'text');\n  display: block;\n  font: map.get(theme.$font, 'l');\n  font-weight: map.get(theme.$font-weight, 'bold');\n  padding: map.get(theme.$spacing, 's') 0\n    calc(#{map.get(theme.$spacing, 's')} - 4px);\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    background-color: map.get(theme.$color, 'grey-10');\n    outline: none;\n  }\n}\n\n.system-list-item-link--selected {\n  border-bottom: 4px solid map.get(theme.$color, 'yellow-100');\n}\n\n.loading {\n  color: map.get(theme.$color, 'text');\n  font: map.get(theme.$font, 'm');\n  padding: map.get(theme.$spacing, 's');\n}\n\n/* Burger */\n\n.button-toggle {\n  background-color: map.get(theme.$color, 'grey-25');\n  border-width: 0;\n  height: $_nav-toggle-size;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: transform 300ms;\n  width: $_nav-toggle-size;\n  z-index: 1001;\n\n  :global(.no-js) & {\n    display: none;\n  }\n}\n\n.button-toggle--closed {\n  transform: translate($_nav-toggle-size);\n}\n\n.hamburger-box {\n  left: ($_nav-toggle-size - $_nav-toggle-bar-width) * 0.5;\n  position: absolute;\n  top: 50%;\n}\n\n.hamburger-inner {\n  display: block;\n  margin-top: -($_nav-toggle-bar-height * 0.5);\n}\n\n.hamburger-inner,\n.hamburger-inner::before,\n.hamburger-inner::after {\n  background-color: map.get(theme.$color, 'grey-75');\n  height: $_nav-toggle-bar-height;\n  position: absolute;\n  width: $_nav-toggle-bar-width;\n}\n\n.hamburger-inner::before,\n.hamburger-inner::after {\n  content: '';\n  display: block;\n}\n\n.hamburger-inner::before {\n  top: -($_nav-toggle-bar-spacing-between + $_nav-toggle-bar-height);\n}\n\n.hamburger-inner::after {\n  bottom: -($_nav-toggle-bar-spacing-between + $_nav-toggle-bar-height);\n}\n\n.button-toggle .hamburger-inner {\n  transition-duration: 0.075s;\n  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n\n.button-toggle .hamburger-inner::before {\n  transition: top 0.075s 0.12s ease, opacity 0.075s ease;\n}\n\n.button-toggle--open .hamburger-inner {\n  transform: rotate(45deg);\n  transition-delay: 0.12s;\n  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\n.button-toggle--open .hamburger-inner::before {\n  opacity: 0;\n  top: 0;\n  transition: top 0.075s ease, opacity 0.075s 0.12s ease;\n}\n\n.button-toggle--open .hamburger-inner::after {\n  bottom: 0;\n  transform: rotate(-90deg);\n  transition: bottom 0.075s ease,\n    transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\n.button-toggle--closed .hamburger-inner::after {\n  transition: bottom 0.075s 0.12s ease,\n    transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n",".container {\n  box-sizing: border-box;\n  max-width: 100%;\n  overflow-x: hidden;\n  transition: margin-left 300ms ease;\n\n  :global(.no-js) & {\n    @media screen and (min-width: 1140px) {\n      margin-left: 15rem;\n    }\n  }\n}\n\n.container--with-sidebar {\n  @media screen and (min-width: 1140px) {\n    margin-left: 15rem;\n  }\n}\n"]}